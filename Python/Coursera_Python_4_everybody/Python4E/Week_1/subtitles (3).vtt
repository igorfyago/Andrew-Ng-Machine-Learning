WEBVTT

1
00:00:09.273 --> 00:00:09.930
Welcome back.

2
00:00:09.930 --> 00:00:13.070
Now, we're going to talk a little
bit about hardware architecture.

3
00:00:13.070 --> 00:00:17.830
You might ask yourself sort of
why all these terms, and words,

4
00:00:17.830 --> 00:00:22.020
and central processing unit, what I
want from this section is I just want to

5
00:00:22.020 --> 00:00:24.720
define a few terms, so that I can
use them in the rest of the course.

6
00:00:24.720 --> 00:00:25.690
That's really it.

7
00:00:25.690 --> 00:00:30.910
I want you to have some sense of
the basic block diagram of things.

8
00:00:30.910 --> 00:00:35.540
Now in the old days, I'm going to show
you three generations of hardware.

9
00:00:35.540 --> 00:00:41.110
I'm going to show you really old
hardware from the 60s and 70s.

10
00:00:41.110 --> 00:00:47.693
I'm going to show you sort of medium old
hardware from the 90s and early 2000s.

11
00:00:47.693 --> 00:00:51.260
And then, I'm going to show
you sort of super brand new

12
00:00:51.260 --> 00:00:54.502
hardware that sort of this
is a Raspberry Pi and

13
00:00:54.502 --> 00:01:00.280
it's the kind of highly integrated hardware
that goes into things like the cellphone.

14
00:01:00.280 --> 00:01:01.480
So I'll kind of be going back and

15
00:01:01.480 --> 00:01:04.640
forth between three complete
generations of hardware.

16
00:01:07.170 --> 00:01:12.460
But the picture and the concepts that I
want you to understand are these terms.

17
00:01:12.460 --> 00:01:15.431
Central processing unit,
main memory, secondary memory unit,

18
00:01:15.431 --> 00:01:16.830
and input/output devices.

19
00:01:16.830 --> 00:01:18.840
So we'll start with
input/output devices.

20
00:01:18.840 --> 00:01:23.850
They are the way that this computer
accesses the outside world.

21
00:01:23.850 --> 00:01:28.970
So things like the mouse, the keyboard,
right, I got a keyboard here.

22
00:01:31.000 --> 00:01:32.390
Keyboard.

23
00:01:32.390 --> 00:01:33.840
Screen.

24
00:01:33.840 --> 00:01:34.520
All these things.

25
00:01:34.520 --> 00:01:36.030
I don't want to mess
up the keyboard there.

26
00:01:36.030 --> 00:01:38.750
And so these are the input/output devices.

27
00:01:38.750 --> 00:01:43.480
There is a little, that's okay just mess
up a little bit, no problem at all.

28
00:01:43.480 --> 00:01:45.250
Output devices, screens, and

29
00:01:45.250 --> 00:01:49.140
that's sort of how the humans in
the outside world interact.

30
00:01:49.140 --> 00:01:53.880
Software, the main inside the computer,
we have the central processing unit, and

31
00:01:53.880 --> 00:01:56.370
the main memory, and
then the secondary memory.

32
00:01:56.370 --> 00:02:01.630
And so it's probably easier for
me to take the, neither the oldest nor

33
00:02:01.630 --> 00:02:04.850
the newest, to give you a sense
of what is going on here.

34
00:02:04.850 --> 00:02:08.880
And so, if you had a desktop and maybe you
still have one of these junky old desktops

35
00:02:08.880 --> 00:02:13.480
at home, they are the ones that are big
and they make noise when they start up,

36
00:02:13.480 --> 00:02:16.860
they have in them a number
of different parts and

37
00:02:16.860 --> 00:02:22.670
the closest thing that a computer
has to intelligence is this.

38
00:02:22.670 --> 00:02:26.190
Central processing unit,
CPU is what we call them.

39
00:02:26.190 --> 00:02:30.640
And if you look at the back side of
this CPU it is actually a circuit.

40
00:02:30.640 --> 00:02:35.430
It's a highly sophisticated circuit
with millions of transistors on it, and

41
00:02:35.430 --> 00:02:38.410
you've probably heard that,
millions of transistors. It runs

42
00:02:38.410 --> 00:02:40.600
maybe three billion
instructions per second.

43
00:02:40.600 --> 00:02:41.750
What does that mean?

44
00:02:41.750 --> 00:02:45.210
Well that means that an instruction
is a set of electrical pulses,

45
00:02:45.210 --> 00:02:48.948
maybe 32 little wires or 64 little wires.

46
00:02:48.948 --> 00:02:54.610
And at three billion times a second,
this is programmed to ask what's next.

47
00:02:54.610 --> 00:02:59.230
And it pulls what's next in
these little electric wires.

48
00:02:59.230 --> 00:03:01.650
Well, where does it get
the answer to what's next?

49
00:03:01.650 --> 00:03:05.780
It gets the answer to what's next out
of the memory. And so your program,

50
00:03:05.780 --> 00:03:10.450
when you write a program, let me
draw this, when you write a program,

51
00:03:10.450 --> 00:03:15.390
you create a file on the secondary memory,
like a Python file, and then at some point

52
00:03:15.390 --> 00:03:20.710
that is loaded into the main memory,
translated, and then your program is here.

53
00:03:20.710 --> 00:03:26.550
And then when the CPU says what next,
your program feeds its first instruction.

54
00:03:26.550 --> 00:03:28.850
And then when that's done,
the CPU says what's next?

55
00:03:28.850 --> 00:03:31.900
It feeds the second instruction,
third instruction, fourth instruction.

56
00:03:31.900 --> 00:03:34.290
It's called the fetch-execute cycle.

57
00:03:34.290 --> 00:03:39.160
And these two parts, the CPU and
the main memory, are what participate.

58
00:03:39.160 --> 00:03:42.440
And the main memory is
where you kind of live.

59
00:03:42.440 --> 00:03:46.200
Somewhere in there, a little tiny
version of yourself is in there

60
00:03:46.200 --> 00:03:48.930
answering the questions
that this is asking.

61
00:03:48.930 --> 00:03:53.420
Now you might say how smart is this,
it's not really very smart at all. It's

62
00:03:53.420 --> 00:03:59.060
a really fast hand calculator with lots of
storage is the best way to think about it.

63
00:03:59.060 --> 00:04:02.770
And going back to the 60s and the 70s,

64
00:04:02.770 --> 00:04:08.600
this is a piece of hardware from
a computer that was the size

65
00:04:08.600 --> 00:04:14.670
of a room with probably 20 refrigerators,
all with modules that make this up.

66
00:04:14.670 --> 00:04:19.340
And in here, well you probably
can't see it, you've got resistors,

67
00:04:19.340 --> 00:04:21.830
transistors, and
capacitors, and then wires.

68
00:04:21.830 --> 00:04:25.778
The wires are all printed on this printed
circuit board, otherwise known as PCB.

69
00:04:25.778 --> 00:04:31.750
And so, the closest thing this has to
intelligence are these transistors.

70
00:04:31.750 --> 00:04:32.840
And at their simplest,

71
00:04:32.840 --> 00:04:36.710
what they can do is they can sort of
make really simple yes/no decisions.

72
00:04:36.710 --> 00:04:40.140
And then they also can be used,
if you hook them together the right way,

73
00:04:40.140 --> 00:04:42.150
to store a little bit of information.

74
00:04:42.150 --> 00:04:46.740
And so, when we say there
are millions of transistors

75
00:04:46.740 --> 00:04:49.670
packed into this little
tiny square right here.

76
00:04:49.670 --> 00:04:50.550
It's kind of pretty.

77
00:04:50.550 --> 00:04:56.360
I mean, if you look at it, it's sort of, 
it looks almost like a jewel, it's so pretty.

78
00:04:56.360 --> 00:05:01.870
And each one of those is a real
tiny photo-imprinted transistor and

79
00:05:01.870 --> 00:05:04.100
so there are millions of this.

80
00:05:04.100 --> 00:05:08.420
And so the difference between 1960 and

81
00:05:08.420 --> 00:05:13.120
today is this part gets smaller and
smaller and smaller to the point where

82
00:05:13.120 --> 00:05:20.010
literally thousands of these things
are all squeezed in to that little square.

83
00:05:20.010 --> 00:05:27.580
And coming back to sort of the mid-grade
one, so this one here is the motherboard.

84
00:05:27.580 --> 00:05:30.720
This part here is the motherboard because
it's the mother of all boards and

85
00:05:30.720 --> 00:05:32.430
it connects everything together.

86
00:05:32.430 --> 00:05:35.800
All these components plug in and
that's how they are connected together and

87
00:05:35.800 --> 00:05:38.990
there's a whole bunch of wires that
go back and forth on this and so

88
00:05:38.990 --> 00:05:44.360
this is how your program in a sense is
transported from the memory to the CPU.

89
00:05:44.360 --> 00:05:47.290
And so, this motherboard connects them.

90
00:05:47.290 --> 00:05:51.580
Another thing that's connected to
the motherboard is secondary storage.

91
00:05:51.580 --> 00:05:55.130
Now, the reason we have to have
secondary memory or secondary storage

92
00:05:55.130 --> 00:05:59.260
is this is designed to be really fast,
the main memory is super fast.

93
00:05:59.260 --> 00:06:04.050
And what happens is when
the computer turns off,

94
00:06:04.050 --> 00:06:06.640
your program is erased from here.

95
00:06:06.640 --> 00:06:11.310
And so I originally said that
you write your program, and

96
00:06:11.310 --> 00:06:13.910
you put a file in here, a .py file, and

97
00:06:13.910 --> 00:06:17.690
this is the same place that your Word
files are, and your PowerPoints are.

98
00:06:17.690 --> 00:06:21.440
And then, the .py file is kind of loaded
and translated into the main memory.

99
00:06:21.440 --> 00:06:24.420
And then when the computer shuts off,
all this data goes away.

100
00:06:24.420 --> 00:06:26.500
Secondary memory is permanent.

101
00:06:26.500 --> 00:06:28.390
This does not get shut off.

102
00:06:28.390 --> 00:06:34.150
And so, in the old days,
this old-day stuff,

103
00:06:34.150 --> 00:06:38.840
we used to store our programs and
our files on our hard drive.

104
00:06:38.840 --> 00:06:40.620
And you may even have a computer at home

105
00:06:40.620 --> 00:06:45.200
where there's a actual physical spinning
platter of magnetic media and

106
00:06:45.200 --> 00:06:48.230
a little head that goes in and
out to read and write the data.

107
00:06:48.230 --> 00:06:53.130
And so it actually records
magnetically when you put a file in,

108
00:06:53.130 --> 00:06:57.610
it records it and then when the power's
off the magnetic recording stays here.

109
00:06:57.610 --> 00:07:02.240
And so these things,
physical disk drives, are kind of going,

110
00:07:02.240 --> 00:07:06.450
becoming extinct, because all the data
is in little USB sticks like this, and

111
00:07:06.450 --> 00:07:09.680
that's a perfectly good
version of secondary memory.

112
00:07:09.680 --> 00:07:13.370
But at least for us,
we can look at these beautiful antique

113
00:07:13.370 --> 00:07:18.770
mechanical gadgets that we used to store
data magnetically when the power goes off.

114
00:07:18.770 --> 00:07:21.372
Now, this one here is pretty broken.

115
00:07:21.372 --> 00:07:23.990
[LAUGH] And it's pretty in bad shape, so

116
00:07:23.990 --> 00:07:26.240
it's probably not really
storing much of anything.

117
00:07:26.240 --> 00:07:28.430
So in a summary of this picture,

118
00:07:28.430 --> 00:07:32.990
the thing I really want you to get out of
this picture is a series of definitions.

119
00:07:32.990 --> 00:07:36.460
The Central Processing Unit
is very simple,

120
00:07:36.460 --> 00:07:39.670
it's the closest thing
computers have to brains, but

121
00:07:39.670 --> 00:07:45.020
it wants to answer the question what to
do next, but we have to feed, through memory.

122
00:07:45.020 --> 00:07:48.100
the answers, which is your programs.
And then we have input devices,

123
00:07:48.100 --> 00:07:50.310
output devices, the main memory, and

124
00:07:50.310 --> 00:07:55.310
then the larger permanent
storage in the secondary memory.

125
00:07:55.310 --> 00:07:59.920
So, where you live inside of a computer
is basically in the main memory.

126
00:07:59.920 --> 00:08:05.540
When you write a program, you type it in
the computer, you outside the computer

127
00:08:05.540 --> 00:08:09.300
are typing on your keyboard, and
you're typing Python commands into a file.

128
00:08:09.300 --> 00:08:12.110
Like if x less than 3, print, right?

129
00:08:12.110 --> 00:08:14.510
And then, that gets loaded into the 
main memory, and

130
00:08:14.510 --> 00:08:17.480
so you,
this is a creative version of yourself.

131
00:08:17.480 --> 00:08:19.800
It's your instructions that
are going to be run and

132
00:08:19.800 --> 00:08:23.090
that program ends up in the main memory,
and then it's run.

133
00:08:23.090 --> 00:08:26.830
So, this is sort of where you
live inside the computer.

134
00:08:26.830 --> 00:08:27.900
Think of it that way.

135
00:08:27.900 --> 00:08:32.300
You're living in main memory when
your program is actually executing.

136
00:08:32.300 --> 00:08:35.610
Now, it turns out that
the instructions that this

137
00:08:35.610 --> 00:08:38.710
central processor uses
are a series of zeroes and ones.

138
00:08:38.710 --> 00:08:42.180
And when I said like 32 zeroes and
ones, or 64 zeroes and

139
00:08:42.180 --> 00:08:46.730
ones, simultaneously are fed into this for
each of the instructions.

140
00:08:46.730 --> 00:08:49.650
We use a language called machine language.

141
00:08:49.650 --> 00:08:52.420
And I would love some day to
teach you machine language, but

142
00:08:52.420 --> 00:08:55.240
we don't have time right now, and you,
that is more moving towards being

143
00:08:55.240 --> 00:08:58.140
a computer scientist when you start
learning machine language, but

144
00:08:58.140 --> 00:09:02.460
basically we don't have to worry
about that too much, we write Python.

145
00:09:02.460 --> 00:09:03.888
And we write in Python and

146
00:09:03.888 --> 00:09:07.836
then something effectively translates
it into machine language and

147
00:09:07.836 --> 00:09:12.510
then machine language is the thing that
runs and runs and runs and runs and so.

148
00:09:12.510 --> 00:09:15.270
Someday you might take a look for that,
but that's more of a computer science

149
00:09:15.270 --> 00:09:17.890
thing and
the software that does this translation,

150
00:09:17.890 --> 00:09:20.660
which is either called a compiler or
an interpreter,

151
00:09:20.660 --> 00:09:24.540
we can talk more about that when you
become more of a computer scientist.

152
00:09:24.540 --> 00:09:28.540
But for now, we're going to worry
about how to write this code and

153
00:09:28.540 --> 00:09:33.730
the rest of this sort is going to fall
by the wayside as we go forward.

154
00:09:33.730 --> 00:09:34.990
So, I got a couple of videos here.

155
00:09:36.130 --> 00:09:40.280
This one video,
hopefully the YouTube URL is still good,

156
00:09:40.280 --> 00:09:44.015
if not we'll try to find another way
to get you linked to a good copy of it.

157
00:09:44.015 --> 00:09:49.785
But it, basically, these, as I said,
there are millions of transistors

158
00:09:49.785 --> 00:09:53.135
in one of these things, and there's a lot
of electricity going through these things.

159
00:09:53.135 --> 00:09:55.345
And when your computer
heats up on your lap,

160
00:09:55.345 --> 00:09:57.815
it's this little part here
that's working really hard.

161
00:09:57.815 --> 00:09:59.840
Its doing things three billion times a second.

162
00:09:59.840 --> 00:10:03.040
So someone has made a video,
not a very good video, but

163
00:10:03.040 --> 00:10:06.890
it's from a long time ago,
where you take the cooling part off and

164
00:10:06.890 --> 00:10:11.652
you watch what happens to these CPUs when
they're doing all this work three billion

165
00:10:11.652 --> 00:10:15.670
times a second using all this electricity
and they're not properly cooled.

166
00:10:15.670 --> 00:10:19.200
Another cool video that we have
is a video of hard drives and

167
00:10:19.200 --> 00:10:21.070
how they actually spin in reality.

168
00:10:21.070 --> 00:10:24.020
This one is totally messed up because
I've been beating on it for years and

169
00:10:24.020 --> 00:10:27.400
playing with it, using it in all my
classes for years, so it's in really bad shape.

170
00:10:27.400 --> 00:10:32.360
But this video shows you how that works
and how it actually spins in reality.

171
00:10:32.360 --> 00:10:35.390
And you'll hear noises that if
you have or had a desktop computer,

172
00:10:36.440 --> 00:10:39.880
you'll kind of recognize the noise, and
then you'll have an idea of what's going

173
00:10:39.880 --> 00:10:44.950
on inside that computer as that
secondary storage is moving around.

174
00:10:44.950 --> 00:10:49.916
And like I said, secondary storage is
becoming less and less relevant as we move

175
00:10:49.916 --> 00:10:54.350
to solid-state storage, like the kind
of storage that's in a USB stick.

176
00:10:55.590 --> 00:10:58.620
So up next, we're going to talk
about how we write that Python.

177
00:10:58.620 --> 00:11:00.353
I talked a little about the hardware now,
and

178
00:11:00.353 --> 00:11:02.320
now we're going to get
started writing some Python.