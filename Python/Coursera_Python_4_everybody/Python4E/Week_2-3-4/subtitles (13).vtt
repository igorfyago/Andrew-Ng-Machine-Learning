WEBVTT

1
00:00:09.019 --> 00:00:10.580
So, welcome to our first assignment.

2
00:00:10.580 --> 00:00:14.680
Our first assignment, of course,
like in all decent programming classes,

3
00:00:14.680 --> 00:00:16.270
is printing Hello World.

4
00:00:16.270 --> 00:00:18.230
Now we're going to use the 
autograder for this.

5
00:00:18.230 --> 00:00:21.410
And so, here we are,
and let me scroll down.

6
00:00:21.410 --> 00:00:25.385
We have a demonstration and it's kind of
matic because that's the demonstration I'm

7
00:00:25.385 --> 00:00:27.675
doing right now,
it's not all that matters.

8
00:00:27.675 --> 00:00:31.274
So, here's an assignment, and assignments
are a little bit different when you click

9
00:00:31.274 --> 00:00:34.133
them because there's the honor code and
you have to type your name and

10
00:00:34.133 --> 00:00:36.598
hit this check box to sort of
point out that you're human and

11
00:00:36.598 --> 00:00:39.040
that you're the right human, etc.

12
00:00:39.040 --> 00:00:41.520
And then it's going to launch the tool

13
00:00:41.520 --> 00:00:45.690
when you press open tool here
in a new window, and here we go.

14
00:00:45.690 --> 00:00:50.960
And so, basically,
this is a Python simulated environment.

15
00:00:50.960 --> 00:00:55.370
It's only good enough to do the first
ten chapters, but it's great.

16
00:00:55.370 --> 00:01:00.040
Now, the idea that I have is that you will
actually write the Python on your computer

17
00:01:00.040 --> 00:01:04.578
using a real text editor like Atom, and
then just paste the code in here to

18
00:01:04.578 --> 00:01:08.916
get graded, but we understand that if
you're using an iPad or something else

19
00:01:08.916 --> 00:01:13.320
like that that this might be the only way
that you're going to do it, or if you're

20
00:01:13.320 --> 00:01:18.304
in a school or something and they've only
got Chromebooks, it's okay, you can do it.

21
00:01:18.304 --> 00:01:22.950
But at some point, like by chapter 11,
you need to have Python, but that's okay.

22
00:01:22.950 --> 00:01:27.210
So some of the buttons that you're
going to see here, you won't see,

23
00:01:27.210 --> 00:01:28.660
these are the teaching assistant and

24
00:01:28.660 --> 00:01:33.280
configuration buttons, but you will see
the check code and the reset code button.

25
00:01:33.280 --> 00:01:37.481
And so what you often find when you
get this is like I give you some code that

26
00:01:37.481 --> 00:01:41.769
is sort of partially there,
in this particular one it has a mistake.

27
00:01:41.769 --> 00:01:44.392
And so I'm going to run it,
say check code, and

28
00:01:44.392 --> 00:01:47.940
this actually submits the code
to Python and it'll run.

29
00:01:47.940 --> 00:01:49.717
And in this case, it's got an error,

30
00:01:49.717 --> 00:01:52.099
name error print cue is
not defined on line two.

31
00:01:52.099 --> 00:01:56.868
And, of course, the bug here is, it
says please correct your code and rerun,

32
00:01:56.868 --> 00:02:00.119
the bug here is that's supposed
to be a t not a q, see,

33
00:02:00.119 --> 00:02:05.070
that's just powerful, so
this first program is really quite easy.

34
00:02:05.070 --> 00:02:09.610
And so, it also shows you in
the autograder the desired output.

35
00:02:09.610 --> 00:02:13.700
And so we'll do check code,
and this is going to work.

36
00:02:13.700 --> 00:02:18.710
And you see this little spinner, that is
the autograder sending your grade back

37
00:02:18.710 --> 00:02:22.980
to Coursera, so that it gets
back in your Coursera gradebook.

38
00:02:22.980 --> 00:02:27.337
And if you don't see that, then you got
a problem, or you can go back and check it

39
00:02:27.337 --> 00:02:32.042
in Coursera, but that is the moment where
it's decided that you've done a good job.

40
00:02:32.042 --> 00:02:35.858
Now, one thing about this is that once
your grade has been set in Coursera,

41
00:02:35.858 --> 00:02:39.978
you can play around here, mess around, and
it doesn't like send back bad grades,

42
00:02:39.978 --> 00:02:41.639
it only sends back good grades.

43
00:02:41.639 --> 00:02:45.612
These are all pass/fail, so
you either have a 100% or 0%, and

44
00:02:45.612 --> 00:02:49.400
if you later mess it up,
you still keep a 100% for your grade.

45
00:02:49.400 --> 00:02:55.730
So it's not like the last grade that
you sent, it's actually the high grade,

46
00:02:55.730 --> 00:03:00.309
which is really it's pass/fail,
so it's 0% or 100%.

47
00:03:00.309 --> 00:03:04.360
But the other thing that you'll notice
is if I make a mistake in the output

48
00:03:04.360 --> 00:03:07.280
it's not going to update the grade,
and so I'm going to make it so

49
00:03:07.280 --> 00:03:09.170
the desired output is hello world.

50
00:03:09.170 --> 00:03:11.070
And so, if I check the code now,

51
00:03:11.070 --> 00:03:14.090
it's going to say,
please correct your code and re-run.

52
00:03:14.090 --> 00:03:16.950
It points over here in a mismatch, because
this is the output of your program,

53
00:03:16.950 --> 00:03:20.191
this is the output it wanted
to have happen, okay?

54
00:03:20.191 --> 00:03:23.360
And so, that's what happens, right?

55
00:03:23.360 --> 00:03:27.416
Now, the other thing that you will notice,
and I can't really demonstrate it on

56
00:03:27.416 --> 00:03:31.294
this first one, is there is a bit of
static analysis that this autograder does

57
00:03:31.294 --> 00:03:35.411
to your code, and it's like you should
have used a for statement in this problem,

58
00:03:35.411 --> 00:03:39.374
or you should have used the input
statement in this problem, etc, etc, etc.

59
00:03:39.374 --> 00:03:42.909
And so,
that also can catch you if you sort of,

60
00:03:42.909 --> 00:03:48.520
are supposed to compute something but
you just print out the answer.

61
00:03:48.520 --> 00:03:52.280
And so it's not just enough to match the
output, you have to match the output, and

62
00:03:52.280 --> 00:03:55.600
it does a little bit of looking at your
Python code to make sure your Python code

63
00:03:55.600 --> 00:03:56.260
makes some sense.

64
00:03:57.370 --> 00:04:00.990
Another thing that's cool about this is
this view grades button that you don't see

65
00:04:00.990 --> 00:04:03.569
that we the teaching assistants and
teaching staff see.

66
00:04:04.810 --> 00:04:08.531
If you're having problems on
an assignment, you don't have to put your

67
00:04:08.531 --> 00:04:12.496
code in the forum, you can simply talk
to a teaching assistant in the forum and

68
00:04:12.496 --> 00:04:16.705
they can come into the assignment and they
can actually see your exact code sitting

69
00:04:16.705 --> 00:04:19.225
in the autograder,
they can even run your code.

70
00:04:19.225 --> 00:04:23.699
And so it's a much better way to exchange
code with the teaching assistants than

71
00:04:23.699 --> 00:04:25.745
sort of posting code in the forums.

72
00:04:25.745 --> 00:04:28.628
In the very last course we do
let you post code in the forums,

73
00:04:28.628 --> 00:04:30.194
but in the first four we don't.

74
00:04:30.194 --> 00:04:35.428
I know that's frustrating to people, but
working code makes it too easy for people

75
00:04:35.428 --> 00:04:41.270
to just like cut and paste it because we'd
like, let me just finish this assignment.

76
00:04:41.270 --> 00:04:44.629
And if you don't struggle on the first
few assignments and understand them,

77
00:04:44.629 --> 00:04:47.639
then you won't actually understand
the fifth or sixth assignment.

78
00:04:47.639 --> 00:04:51.589
And so, taking a shortcut by borrowing
code from someone else is really just

79
00:04:51.589 --> 00:04:52.710
cheating yourself.

80
00:04:54.110 --> 00:04:57.260
And if you put bad code in the forum,
that's even worse.

81
00:04:57.260 --> 00:04:59.660
You say, my code is broken and 
it doesn't work, and

82
00:04:59.660 --> 00:05:02.620
then students are like, well,
I'll just take your broken code.

83
00:05:02.620 --> 00:05:06.760
And so, we just don't like
putting code in the forum.

84
00:05:06.760 --> 00:05:11.662
And so, that's basically the idea,
let me finish this and

85
00:05:11.662 --> 00:05:14.625
get it back correct again, so
I print out the right output.

86
00:05:14.625 --> 00:05:18.125
So it runs it, you can have
a syntax error, which I showed you.

87
00:05:18.125 --> 00:05:19.875
You can have an output error.

88
00:05:19.875 --> 00:05:22.465
But if the syntax is right and
the output is right and

89
00:05:22.465 --> 00:05:27.312
you've passed all the static checks, then
it sends the grade back to Coursera and

90
00:05:27.312 --> 00:05:30.562
your grade is updated on Coursera,
then you just click to done button

91
00:05:30.562 --> 00:05:32.702
when you're all done,
then you're back in Coursera.

92
00:05:32.702 --> 00:05:35.592
So, I hope that was helpful to
help get you through writing

93
00:05:35.592 --> 00:05:37.332
your first assignment for this class.